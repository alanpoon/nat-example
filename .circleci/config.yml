# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  setup-sccache:
    description: "Install sccache"
    steps:
  restore-cargo-cache:
    description: "Restore cargo"
    steps:
      - restore_cache:
          name: "Restore cargo cache"
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}
  save-cargo-cache:
    description: "save_cargo_cache"
    steps:
      - save_cache:
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}
          paths:
            - /usr/local/cargo/registry
            - target
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: rustropy/rust-wasm-ci:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - setup-sccache
      - restore-sccache-cache
      - run:
          name: "chown"
          command: "sudo chown -R circleci /usr/local/cargo"
      - run:
          name: Calculate dependencies
          command: |
            rustc --version >rust-version
            test -e Cargo.lock || cargo generate-lockfile
      - restore-cargo-cache
      - run:
          name: "build-wasm"
          command: "cargo build --bin desk-client --target wasm32-unknown-unknown --release --features web"
      - save-cargo-cache
      - run:
          name: "wasm-bindgen"
          command: "./wasm-bindgen --out-dir public --target web target/wasm32-unknown-unknown/release/desk-client.wasm"
      
      
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello